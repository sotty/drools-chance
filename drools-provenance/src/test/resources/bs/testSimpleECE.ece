package org.drools.beliefs.provenance;
import org.test.*;
import com.foo.*;
import org.drools.core.metadata.*;
import org.drools.beliefs.provenance.annotations.*;
import java.util.*;

import static com.foo.MetaFactory.*;
import static org.test.MetaFactory.*;

global List list;

declare MyKlassEvent
    @role(event)
    myKlass:    MyKlass @key
end

declare MySubKlassEvent
    @role(event)
    mySubKlass: MySubKlass @key
end

/*
rule "MyKlass received"
@Expect( enabled=FALSE )
@Display( "MyKlass was received @{$mk_1}" )
dialect "mvel"
no-loop
when
    $mk: MyKlass( flag == false ) @Evidence( @Display( type="1", value="flag: @{$mk.flag}"))
then
    x = bolster( newMySubKlass("123-000") );
    System.out.println("@@@@@"+x);
end
*/
rule "Create MyKlassEvent"
@Expect( enabled=FALSE )
when
    $mk: MyKlass( )
then
    insert(new MyKlassEvent($mk));
end

rule "Create MySubKlassEvent"
@Expect( enabled=FALSE )
when
    $msk: MySubKlass( )
then
    insert(new MySubKlassEvent($msk));
end

rule "Expecting SubKlass"
when
    $trigger: MyKlassEvent( $mk: myKlass != null )
then
    expect MySubKlassEvent( this after[0,100] $trigger )
    onFulfill {
        bolster( modifyMyKlass($mk).prop("fooVal"));
    } onViolation {
        bolster( modifyMyKlass($mk).prop("booVal"));
    }
end
